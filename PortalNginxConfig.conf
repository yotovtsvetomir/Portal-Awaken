proxy_cache_path ../pageca levels=1:2 keys_zone=pageca:100m max_size=1g inactive=2h use_temp_path=off;

server {


        server_name portal.allawaken.com www.portal.allawaken.com;
        location / {
    proxy_set_header X-Prerender-Token zGpkbRvUvay1JcDQTpEj;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";

    set $prerender 0;
    if ($http_user_agent ~* "googlebot|baiduspider|mediumbot|twitterbot|facebookexternalhit|rogerbot|linkedinbot|embedly|quora link preview|showyoubot|outbrain|pinterest|slackbot|vkShare|W3C_Validator") {
        set $prerender 1;
    }
    if ($args ~ "_escaped_fragment_") {
        set $prerender 1;
    }
    if ($http_user_agent ~ "Prerender") {
        set $prerender 0;
    }
    if ($uri ~* "\.(webp|js|css|xml|less|png|jpg|jpeg|gif|pdf|doc|txt|ico|rss|zip|mp3|rar|exe|wmv|doc|avi|ppt|mpg|mpeg|tif|wav|mov|psd|ai|xls|mp4|m4a|swf|dat|dmg|iso|flv|m4v|torrent|ttf|woff|svg|eot)") {
        set $prerender 0;
    }

    #resolve using Google's DNS server to force DNS resolution and prevent caching of IPs
    resolver 8.8.8.8;

    if ($prerender = 1) {

        #setting prerender as a variable forces DNS resolution since nginx caches IPs and doesnt play well with load balancing
        set $prerender "service.prerender.io";
        rewrite .* /$scheme://$host$request_uri? break;
        proxy_pass http://$prerender;
    }

               # proxy_ssl_certificate         /etc/nginx/cert.pem;
               # proxy_ssl_certificate_key     /etc/nginx/key.pem;
               # proxy_ssl_protocols           TLSv1 TLSv1.1 TLSv1.2;
               # proxy_ssl_ciphers             HIGH:!aNULL:!MD5;
               # proxy_ssl_session_reuse on;

                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";

                proxy_pass http://localhost:8080;
		                proxy_set_header       Host $host;
                proxy_set_header       X-Real-Ip $remote_addr;
                proxy_buffering        off;

                # use our cache named 'pagecache'
                proxy_cache pageca;
                expires              365d;
    		# cache status code 200 responses for 10 minutes
                proxy_cache_valid 200 10m;

    		# use the cache if there's a error on app server or it's updating from another request
                proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;

    		# add a header to debug cache status
                add_header X-Cache-Status $upstream_cache_status;

    		# don't let two requests try to populate the cache at the same time
                proxy_cache_lock on;
                proxy_cache_bypass $cookie_session;



        }
        location /api/ {
		proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $host;
                proxy_set_header X-Real-Ip $remote_addr;
                proxy_pass http://localhost:7474;


        }
        location /socket.io/ {
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $host;
                proxy_set_header X-Real-Ip $remote_addr;
                proxy_pass http://localhost:7474;
        }

        location /robots.txt {
                alias /home/aap/src/robots.txt;
        }
        location /dynamic/sitemap.xml {
                alias /home/aap/src/sitemap.xml;
        }

    listen 443 ssl http2 ipv6only=on; # managed by Certbot
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";
    ssl_certificate /etc/letsencrypt/live/portal.allawaken.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/portal.allawaken.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

server {
    if ($host = www.portal.allawaken.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    if ($host = portal.allawaken.com) {
        return 301 https://www.portal.allawaken.com$request_uri;
    } # managed by Certbot


        listen 80;
        listen [::]:80;
	server_name portal.allawaken.com www.portal.allawaken.com;

    location / {
        set $prerender 0;
        if ($http_user_agent ~* "googlebot|baiduspider|mediumbot|twitterbot|facebookexternalhit|rogerbot|linkedinbot|embedly|quora link preview|showyoubot|outbrain|pinterest|slackbot|vkShare|W3C_Validator") {
            set $prerender 1;
        }
        if ($args ~ "_escaped_fragment_") {
            set $prerender 1;
        }
        if ($http_user_agent ~ "Prerender") {
            set $prerender 0;
        }
        if ($uri ~ "\.(js|css|xml|less|png|jpg|jpeg|gif|pdf|doc|txt|ico|rss|zip|mp3|rar|exe|wmv|doc|avi|ppt|mpg|mpeg|tif|wav|mov|psd|ai|xls|mp4|m4a|swf|dat|dmg|iso|flv|m4v|torrent|ttf|woff)") {
            set $prerender 0;
        }

        #resolve using Google's DNS server to force DNS resolution and prevent caching of IPs
        resolver 8.8.8.8;

        if ($prerender = 1) {

            #setting prerender as a variable forces DNS resolution since nginx caches IPs and doesnt play well with load balancing
            set $prerender "http://localhost:8080";
            proxy_pass http://$prerender;

        }
    }
}





